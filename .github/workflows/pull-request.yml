# This is a workflow for testing regression
name: Pull Request
on:
  pull_request:
    paths:
      - src/**/*.ts
      - src/**/*.tsx
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      BOT_NAME: github-actions[bot]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install

      - name: Install playwrights
        run: |
          npx -y playwright install

      - name: Run Tests
        run: npm run test

      - name: Create a comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { BOT_NAME } = process.env;
            const prNumber = context.issue.number;
            const { owner, repo } = context.repo;

            const { data: comments } = await github.rest.pulls.listReviewComments({
              owner,
              repo,
              pull_number: prNumber,
            });


            const botComments = comments.filter(comment => comment.user.login === BOT_NAME).shift()
            const results = require('./test-results.json');
            const { basename } = require('path')

            let commentId = botComments ? botComments.id : null;

            const { success, testResults } = results;
            const table = ["| Test Suite | Total | Pass | Time Elapsed | File |", "| --- | --- | --- | --- | --- |"];

            for (const { assertionResults, name, endTime, startTime } of testResults) {
              const testSuite = assertionResults[0].ancestorTitles[0];

              let pass = 0;
              let total = 0;

              for(const { status } of assertionResults){
                if(status === "passed"){
                  pass++;
                }
                total++;
              }

              table.push(`| ${testSuite} ${total === pass ? "✅" : "❌"} | ${total} | ${pass} | ${((endTime - startTime) / 1000).toFixed(2)} | ${basename(name)} |`);
            }

            const body = `
              ## Test Result: ${success ? "✅" : "❌"}
              
              ${table.join("\n")}
            `;

            if(commentId){
                github.rest.issues.updateComment({
                    owner,
                    repo,
                    comment_id: commentId,
                    body
                });
            } else {
                github.rest.issues.createComment({
                    owner,
                    repo,
                    issue_number: prNumber,
                    body
                }); 
            }
